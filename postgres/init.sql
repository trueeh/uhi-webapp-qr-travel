--
-- PostgreSQL database dump
--

-- Dumped from database version 12.4 (Debian 12.4-1.pgdg100+1)
-- Dumped by pg_dump version 12.4 (Debian 12.4-1.pgdg100+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: attendee; Type: TABLE; Schema: public; Owner: qr
--

CREATE TABLE public.attendee (
    pin character varying(16) NOT NULL,
    arrive character varying NOT NULL,
    email character varying NOT NULL,
    phonenumber character varying NOT NULL,
    surname character varying,
    givenname character varying,
    studentnumber character varying,
    departure character varying,
    location character varying,
    id bigint NOT NULL,
    cookie_uuid character varying NOT NULL,
    createdtimestamp bigint,
    updatedtimestamp bigint,
    street character varying,
    city character varying
);


ALTER TABLE public.attendee OWNER TO qr;

--
-- Name: attendee_id_seq; Type: SEQUENCE; Schema: public; Owner: qr
--

ALTER TABLE public.attendee ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.attendee_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: hibernate_sequence; Type: SEQUENCE; Schema: public; Owner: qr
--

CREATE SEQUENCE public.hibernate_sequence
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.hibernate_sequence OWNER TO qr;

--
-- Name: room; Type: TABLE; Schema: public; Owner: qr
--

CREATE TABLE public.room (
    pin character varying(16) NOT NULL,
    owner_uid character varying(255) NOT NULL,
    description character varying(255) NOT NULL,
    domain character varying(255),
    creation timestamp(6) without time zone NOT NULL,
    rtype integer NOT NULL
);


ALTER TABLE public.room OWNER TO qr;

--
-- Name: roomtype; Type: TABLE; Schema: public; Owner: qr
--

CREATE TABLE public.roomtype (
    rtype integer NOT NULL,
    description character varying
);


ALTER TABLE public.roomtype OWNER TO qr;

--
-- Name: roomtype_rtype_seq; Type: SEQUENCE; Schema: public; Owner: qr
--

ALTER TABLE public.roomtype ALTER COLUMN rtype ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.roomtype_rtype_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: attendee; Type: TABLE DATA; Schema: public; Owner: qr
--

COPY public.attendee (pin, arrive, email, phonenumber, surname, givenname, studentnumber, departure, location, id, cookie_uuid, createdtimestamp, updatedtimestamp, street, city) FROM stdin;
123456	2020-09-17 09:33:26	martin.mustermann@ostfalia.de	+49 0000 0000000	Mustermann	Martin	\N	2020-09-17 09:33:40	1	1978	8a112cc3-b2a5-4eb1-b5c6-80d458fe0cfa	1600328006575	1600328020608	Irgendwo 1	08150 Überall
\.


--
-- Data for Name: room; Type: TABLE DATA; Schema: public; Owner: qr
--

COPY public.room (pin, owner_uid, description, domain, creation, rtype) FROM stdin;
123456	th	Testraum	ostfalia.de	2020-06-22 11:26:59	2
\.


--
-- Data for Name: roomtype; Type: TABLE DATA; Schema: public; Owner: qr
--

COPY public.roomtype (rtype, description) FROM stdin;
1	Klausur
2	Raum
3	Poolraum
4	Servicedesk
5	Gebäude
\.


--
-- Name: attendee_id_seq; Type: SEQUENCE SET; Schema: public; Owner: qr
--

SELECT pg_catalog.setval('public.attendee_id_seq', 1978, true);


--
-- Name: hibernate_sequence; Type: SEQUENCE SET; Schema: public; Owner: qr
--

SELECT pg_catalog.setval('public.hibernate_sequence', 1, true);


--
-- Name: roomtype_rtype_seq; Type: SEQUENCE SET; Schema: public; Owner: qr
--

SELECT pg_catalog.setval('public.roomtype_rtype_seq', 5, true);


--
-- Name: attendee attendee_pkey; Type: CONSTRAINT; Schema: public; Owner: qr
--

ALTER TABLE ONLY public.attendee
    ADD CONSTRAINT attendee_pkey PRIMARY KEY (id);


--
-- Name: room room_ix1; Type: CONSTRAINT; Schema: public; Owner: qr
--

ALTER TABLE ONLY public.room
    ADD CONSTRAINT room_ix1 PRIMARY KEY (pin);


--
-- Name: roomtype roomtype_pkey1; Type: CONSTRAINT; Schema: public; Owner: qr
--

ALTER TABLE ONLY public.roomtype
    ADD CONSTRAINT roomtype_pkey1 PRIMARY KEY (rtype);


--
-- Name: pin_cookie; Type: INDEX; Schema: public; Owner: qr
--

CREATE INDEX pin_cookie ON public.attendee USING btree (pin, cookie_uuid);


--
-- Name: attendee attendee_pin_fkey; Type: FK CONSTRAINT; Schema: public; Owner: qr
--

ALTER TABLE ONLY public.attendee
    ADD CONSTRAINT attendee_pin_fkey FOREIGN KEY (pin) REFERENCES public.room(pin) ON DELETE RESTRICT;


--
-- Name: room room_fk1; Type: FK CONSTRAINT; Schema: public; Owner: qr
--

ALTER TABLE ONLY public.room
    ADD CONSTRAINT room_fk1 FOREIGN KEY (rtype) REFERENCES public.roomtype(rtype);


--
-- PostgreSQL database dump complete
--

